5.条件操作符：（三目操作符，有3个操作数）
  
exp1 ? exp2 : exp3   解释：exp1是判断条件；
                     如果exp1为真，执行exp2；如果exp1为假，执行exp3；
                     
                     
int main()
{
    int a = 10;
    int b = 20;
    int max = 0;
    
    max = (a > b ? a : b);
    
    //if (a > b)
    //    max = a;
    //else
    //    max = b;
    return 0;
}

6.逗号表达式：

exp1 ，exp2, exp3,...expN

7.下标引用、函数调用和结构成员
下标引用操作符：[]    
函数调用操作符：()   .    ——>


int Add(int x, int y)
{
    int z = 0;
    z = x + y;
    return z;
}

int main()
{
    //int arr[10] = { 0 };
    //arr[4];   //[]  为下标引用操作符
    int a = 10;
    int b = 20;
    int sum = Add(a, b); //() 为函数调用操作符；
    
    return 0；
}


只要是整数，内存中存储的都是二进制的补码；
正数的原码/反码/补码相同；
负数：原码：直接按照正负；写出二进制序列
     反码：源码的符号位不变；其它位按位取反得到的
     补码：反码 + 1
eg:
-2
10000000000000000000000000000010 ——原码
11111111111111111111111111111101 ——反码
11111111111111111111111111111110 ——补码


8.关键字

auto  break  case  char  const  continue  default  do  double  else  enum
extern  float  for  goto  if  int  long  register  return  short  signed
sizeof  static  struct  switch  typedef  union  unsigned  void  volatile  while

int main()
{
    //register int a = 10;//建议把a定义成寄存器变量。
    int a = 10;
    a = -2;
    //int 定义的变量是有符号的；
    //signed int 等价于 int;
    unsigned int num = 0;//unsigned 定义的是无符号数；即使num = -1; 也会忽略“-”
    
    //struct  —— 结构体关键字
    //union   —— 联合体/共用体
    //typedef  -  类型定义  -  类型重定义
    typedef unsigned int  u_int;//typedef 将类型名unsigned int重新命名为u_int；
    unsigned int num = 20;
    u_int num2 = 20;      //num 与 num2类型是一样的。
 
    return 0;
}
    
    
    
8-2. static

//static 修饰局部变量，使局部变量的生命周期变长；
//如果没有static，当执行test函数时，a是一个局部变量，a++,a=2。
//局部变量，当进入时，生命周期开始，当执行结束时，生命周期结束，还给系统，即a保持初始值。
void test()
{
    static int a = 1;//当a加上static修饰时，a 是一个静态的局部变量
    a++;
    printf("a = %d\n", a);//a输出是2 3 4 5 6；如果没有static，a的输出是2 2 2 2 2；
}

int main()
{
    int i = 0;
    while (i<5)
    {
        test();
        i++;
     }
     return 0;
}
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    




